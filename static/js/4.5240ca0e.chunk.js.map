{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","DialogItem","className","classes","dialog","active","id","name","Message","message","maxLengthText","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogs","dialogsPage","map","d","messages","m","dialogsItems","values","onSendMessageClick","newMessageBody","compose","dispatch","newMessage","sendMessageAC"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mHCS/MC,EAAkB,SAACC,GACnB,MAAQ,CAACC,OAAQD,EAAME,KAAKD,SAGzB,SAASE,EAAoBC,GAQhC,OAAOC,YAAQN,EAARM,EANP,SAA4BC,GAAkB,IACnCL,EAAwBK,EAAxBL,OAAWM,EADuB,YACVD,EADU,YAEzC,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAI,gB,4FCA3BC,MARf,SAAoBH,GAChB,OACI,qBAAKI,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACI,cAAC,IAAD,CAASL,GAAI,YAAcF,EAAMQ,GAAjC,SAAsCR,EAAMS,UCIzCC,MARf,SAAiBV,GACb,OACI,sBAAKI,UAAWC,IAAQM,QAAxB,cAAmCX,EAAMW,QAAzC,Q,kCCOFC,EAAgBC,YAAiB,IA4BvC,IAOMC,EAAsBC,YAA8B,CACtDC,KAAM,oBADkBD,EAP4C,SAACf,GACrE,OAAO,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACH,8BAAK,cAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBX,KAAM,iBAAkBY,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OACjH,8BAAK,kDASEa,EAtCf,SAAiBzB,GAGb,IAIM0B,EAAU1B,EAAM2B,YAAYD,QAAQE,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBpB,KAAMoB,EAAEpB,KAAMD,GAAIqB,EAAErB,IAA1BqB,EAAErB,OAChEG,EAAUX,EAAM2B,YAAYG,SAASF,KAAI,SAAAG,GAAC,OAAG,cAAC,EAAD,CAAoBpB,QAASoB,EAAEpB,SAAjBoB,EAAEvB,OAInE,OACI,sBAAKJ,UAAWC,IAAQqB,QAAxB,UACI,qBAAKtB,UAAWC,IAAQ2B,aAAxB,SACKN,IAEL,sBAAKtB,UAAWC,IAAQyB,SAAxB,UACI,8BAAMnB,IACN,cAACG,EAAD,CAAqBG,SAhBb,SAACgB,GACjBjC,EAAMkC,mBAAmBD,EAAOE,0B,yBCLzBC,sBACXrC,aAXkB,SAACL,GACnB,MAAO,CACHiC,YAAajC,EAAMiC,gBAEF,SAACU,GACtB,MAAO,CACHH,mBAAoB,SAACI,GAAD,OAAwBD,EAASE,YAAcD,SAMvEzC,IAFWuC,CAGdX","file":"static/js/4.5240ca0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__18Dnz\",\"dialogsItems\":\"Dialogs_dialogsItems__3bxvV\",\"active\":\"Dialogs_active__3LnNf\",\"dialog\":\"Dialogs_dialog__3q2Ji\",\"messages\":\"Dialogs_messages__3IJ5u\",\"message\":\"Dialogs_message__1xRXR\"};","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreReduxType} from \"../redux/redux-store\";\r\n\r\n\r\ntype MSTPType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: StoreReduxType): MSTPType => {\r\n    return  {isAuth: state.auth.isAuth}\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    function RedirectComponent (props: MSTPType) {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\n\r\nfunction DialogItem(props: DialogItemType) {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype MessageType = {\r\nmessage: any\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={classes.message}> {props.message} </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../redux/state\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../assets/validators/validators\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\n\r\nexport type LocalDialogsPageType = {\r\n    dialogsPage: DialogPageType\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n}\r\n\r\ntype AddMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLengthText = maxLengthCreator(50)\r\n\r\nfunction Dialogs(props: LocalDialogsPageType) {\r\n\r\n\r\n    let addNewMessage = (values: AddMessageFormType) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    const dialogs = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const message = props.dialogsPage.messages.map(m=> <Message key={m.id} message={m.message}/>)\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{message}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field placeholder={'Enter your message'} name={'newMessageBody'} component={Textarea} validate={[required, maxLengthText]}/></div>\r\n        <div><button>SEND</button></div>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<AddMessageFormType>({\r\n    form: 'dialogAddMessage'\r\n})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionsTypes, StoreReduxType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state: StoreReduxType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage}\r\n}\r\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void) => {\r\n    return {\r\n        onSendMessageClick: (newMessage: string) => dispatch(sendMessageAC(newMessage))\r\n    }\r\n}\r\n\r\nexport default compose <React.ComponentType>(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs)"],"sourceRoot":""}